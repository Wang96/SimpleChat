{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fnil\fcharset0 Cambria;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri720\partightenfactor0

\f0\fs24 \cf0 COSC 440 \
Channels Implementation \
\
	In our implementation of the channels, a chat client is able to be within multiple channels at once. Having implemented it as per requirements, the implementation of only allowing a client to be in one channel at a time would have greatly simplified the design of the system.  \
\
Client Side Discussion\
	In the implementation of channels, if a user wishes to send a message to a specific channel (given that they are in the channel), they must use the key character \'93@\'94 followed by the channel name to specify the channel.  If the \'93@\'94 character is not used, the message is sent to the global channel. If the client instead could only be in one channel, then the \'93@\'94 character would not have to be used since the client\'92s channel could be retrieved from the hashmap in its ConnectionToClient. \
\
Server-Side Discussion\
	A channel class was created and an array of channels was added as an attribute to the EchoServer1. Server commands with regards to the channel class were costly because only a string was sent into these commands. Often times, a username or channel had to be fetched from the server or channel and strings had to be matched to check for equality. Thus, methods in the Channel class such as adding and removing clients from the channel became costly with having to search for a given username and then remove it or not add it if the client is already in the channel. In order to improve efficiency, one of the ideas discussed was sending the ConnectionToClient object of the sender into the server command as well. Additionally, an array of the channels that a user is in could have possibly been added to the ConnectionToClient hashmap. That would eliminate searches for equality of username sent in the string from the client to usernames on the server or channel to retrieve the ConnectionToClient of that username. Thus, many for loops would have been eliminated. So while this implementation works for our small project, it would become inefficient if it had to handle a large amount of users. \
\
Shortcoming \
One command that should have been implemented was a command for the user to know what channels they are in. There are commands  for client to join channels, leave channels, switch channels and list all the channels but no specific command for the user to know what channel they are in. \
}